{"version":3,"sources":["task/Store.js","task/AddForm.js","task/DelForm.js","task/Item.js","task/List.js","App.js","index.js"],"names":["initData","taskList","createStore","state","action","type","addData","task","limit","slice","unshift","addReduce","splice","index","delReduce","AddForm","props","addTask","addTaskLimit","Date","doChangeTask","bind","doChangeLimit","doAction","e","this","setState","target","value","date","preventDefault","dispatch","onSubmit","Container","maxWidth","Grid","container","spacing","item","xs","TextField","label","variant","onChange","fullWidth","required","utils","DateFnsUtils","disableToolbar","inputVariant","format","Button","color","size","startIcon","AddCircle","Component","connect","DelForm","delIndex","onClick","DeleteForever","Item","TableRow","TableCell","data","toLocaleDateString","List","map","key","Table","TableBody","App","className","ReactDOM","render","store","Store","document","getElementById"],"mappings":"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","file":"static/js/main.bf8e4a43.chunk.js","sourcesContent":["import { createStore } from \"redux\";\n\nconst initData = {\n  taskList: []\n};\n\nexport function reducer(state = initData, action) {\n  switch (action.type) {\n    case \"ADD\":\n      return addReduce(state, action);\n    case \"DELETE\":\n      return delReduce(state, action);\n    default:\n      return state;\n  }\n}\n\nfunction addReduce(state, action) {\n  let addData = {\n    task: action.task,\n    limit: action.limit\n  };\n\n  let taskList = state.taskList.slice();\n  taskList.unshift(addData);\n  return {\n    taskList: taskList\n  };\n}\n\nfunction delReduce(state, action) {\n  let taskList = state.taskList.slice();\n  taskList.splice(action.index, 1);\n\n  return {\n    taskList: taskList\n  };\n}\n\nexport function addTask(task, limit) {\n  return {\n    type: \"ADD\",\n    task: task,\n    limit: limit\n  };\n}\n\nexport function delTask(index) {\n  return {\n    type: \"DELETE\",\n    index: index\n  };\n}\n\nexport default createStore(reducer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTask } from \"./Store\";\nimport Button from \"@material-ui/core/Button\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport { AddCircle } from \"@material-ui/icons\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\n\nclass AddForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTask: \"\",\n      addTaskLimit: new Date()\n    };\n    this.doChangeTask = this.doChangeTask.bind(this);\n    this.doChangeLimit = this.doChangeLimit.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doChangeTask(e) {\n    this.setState({\n      addTask: e.target.value\n    });\n  }\n\n  doChangeLimit(date) {\n    this.setState({\n      addTaskLimit: date\n    });\n  }\n\n  doAction(e) {\n    e.preventDefault();\n    let action = addTask(this.state.addTask, this.state.addTaskLimit);\n    this.props.dispatch(action);\n    this.setState({\n      addTask: \"\",\n      addTaskLimit: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.doAction}>\n          <Container maxWidth=\"xs\">\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"New Task\"\n                  variant=\"outlined\"\n                  onChange={this.doChangeTask}\n                  value={this.state.addTask}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={7}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    disableToolbar\n                    label=\"Limit\"\n                    inputVariant=\"outlined\"\n                    value={this.state.addTaskLimit}\n                    onChange={this.doChangeLimit}\n                    format=\"yyyy/MM/dd\"\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n              <Grid item xs={5}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  startIcon={<AddCircle />}\n                >\n                  Add\n                </Button>\n              </Grid>\n            </Grid>\n          </Container>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => state)(AddForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { delTask } from \"./Store\";\n// import Button from \"@material-ui/core/Button\";\nimport { DeleteForever } from \"@material-ui/icons\";\n\nclass DelForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      delIndex: \"\"\n    };\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doAction(e) {\n    e.preventDefault();\n    let action = delTask(this.props.index);\n    this.props.dispatch(action);\n    this.setState({\n      delIndex: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.doAction}>\n          <DeleteForever variant=\"contained\" color=\"action\" size=\"small\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => state)(DelForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DelForm from \"./DelForm\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nclass Item extends Component {\n  render() {\n    return (\n      <TableRow>\n        <TableCell>\n          <DelForm index={this.props.index} />\n        </TableCell>\n        <TableCell>{this.props.data.limit.toLocaleDateString()}</TableCell>\n        <TableCell>{this.props.data.task}</TableCell>\n      </TableRow>\n    );\n  }\n}\n\nexport default connect(state => state)(Item);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Item from \"./Item\";\nimport Table from \"@material-ui/core/Table\";\nimport { TableBody } from \"@material-ui/core\";\n\nclass List extends Component {\n  render() {\n    let data = this.props.taskList.map((data, index) => (\n      <Item data={data} key={index} index={index} />\n    ));\n\n    return (\n      <Table>\n        <TableBody>{data}</TableBody>\n      </Table>\n    );\n  }\n}\n\nexport default connect(state => state)(List);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport AddForm from \"./task/AddForm\";\nimport List from \"./task/List\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"App-name\">TaskList</h1>\n        <AddForm />\n        <List />\n      </div>\n    );\n  }\n}\n\nexport default connect()(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Store from \"./task/Store\";\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}